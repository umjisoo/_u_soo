1.
키보드로부터 연속해서 정수들을 받음. 정수가 하나씩 입력될때마다 
현재까지입력된 정수들 오름차순 정렬 후 출력
새로 입력된 정수가 이미 배열에 저장되어있다면 duplicate entry출력

#include <stdio.h>
#define MAX 100
int main(void)
{
	int data[MAX];
	int value;
	int n = 0;
	while (1) {
		scanf("%d", &value);
		if (value == -1) break;

		int same = 0;
		for (int i = 0; i < n; i++) {
			if (data[i] == value) {
				same = 1;
				break;
			}
		}
			if (same) {
				printf("duplicate entry\n");
				continue;
			}
		
		int i = n - 1;
		while (i >= 0 && data[i] > value) {
			data[i + 1] = data[i];
			i--;
		}
		data[i + 1] = value;
		n++;

		for (int j = 0; j < n; j++)
			printf("%d ", data[j]);
		printf("\n");
	}
	return 0;
}


3-1.(bubble sort)
텍스트 파일 읽어서 오름차순 정렬 

#include <stdio.h>
#define MAX 100
int main(void)
{
	int data[MAX];
	int n = 0;
	int max,tmp;
	FILE*fp = fopen("input3.txt", "r");
	while (fscanf(fp, "%d", &data[n]) != EOF) {
		n++;
	}
	fclose(fp);

	for (int i = n - 1; i >= 0; i--)
	{
		max = data[i];
		for (int j = i; j >= 0; j--) {
			if (data[j] > max) {
				max = data[j];
				data[j] = data[i];
				data[i] = max;
			}
		}
		
	}
	for (int k = 0; k < n; k++)
		printf("%d  ", data[k]);
	return 0;
}

3-2.(선택정렬)
input.txt에 저장된 정수들을 읽어서 순서대로 배열에 저장한 후 선택정렬 
알고리즘으로 정렬 (오름차순)

#include <stdio.h>
#define MAX 100
int main(void)
{
	int data[MAX];
	int n = 0,j,a;
	int max, tmp;
	FILE*fp = fopen("input3.txt", "r");
	while (fscanf(fp, "%d", &data[n]) != EOF) {
		n++;
	}
	fclose(fp);

	for (int i = n - 1; i >= 0; i--)
	{
		int k = 0;
		for (int j = 0; j <= i; j++) {
			if (data[k] < data[j])
				k = j;
		}
		tmp = data[k]; data[k] = data[i]; data[i] = tmp;

	}
	
	for (int k = 0; k < n; k++)
		printf("%d  ", data[k]);
	return 0;
}

5.
n을 받고 n의 수만큼 
입력으로 구간이 주어지고 각 구간은 구간의 시작점과 끝점으로 표현
시작점이 빠른 순서대로 출력 
시작점이 같은경우 끝점이 빠른것을 먼저 출력
(끝점은 항상 시작점보다 크거나 같음)


#include <stdio.h>
#define MAX 100
int main(void) {
	int sta[MAX], end[MAX];
	int n = 0;
	int tmp;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &sta[i]);
		scanf("%d", &end[i]);
	}
	for (int i = n - 1; i > 0; i--) {
		for (int j = 0; j < i; j++) {
			if (sta[j] > sta[j + 1] || (sta[j] == sta[j + 1] && end[j] > end[j + 1])) {
				tmp = sta[j];
				sta[j] = sta[j + 1];
				sta[j + 1] = tmp;
				tmp = end[j];
				end[j] = end[j + 1];
				end[j + 1] = tmp;
			}
		}
	}
	for (int i = 0; i < n; i++)
		printf("%d %d\n", sta[i], end[i]);
	return 0;
}

6.
정수의 집합 순열이 저장되있는 배열 a
사이클 찾기 

#include <stdio.h>
#define MAX 100
int main(void) {
	int data[MAX];
	int judge[MAX];

	int n, a, count = 0;
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		judge[i] = i;

	for (int i = 0; i < n; i++)
		scanf("%d", &data[i]);

	for (int i = 0; i < n; i++) {
		if (i== judge[i]) {
			a = data[i];
			while (1) {
				judge[a] = -1;
				if (i == data[a]) {
					count++; break;
				}
				a = data[a];
			}
		}
	}
	printf("%d\n", count);
	return 0;
}

7.
입력으로 두개의 양의 정수를 받음
두 정수를 사전식 순서로 출력

#include <stdio.h>
#define MAX 100
int main(void) {
	int a, b;
	scanf("%d %d", &a, &b);
	int x[MAX];
	int y[MAX];
	int t = 0,n=a;
	while (n>0) {
		x[t] = n % 10;
		n = n / 10;
		t++;
	}
	int s = 0,n2=b;
	while (n2 >0) {
		y[s] = n2 % 10;
		n2 = n2 / 10;
		s++;
	}
	for (int i = t - 1, j = s - 1; (i >= 0 && j >= 0); i--, j--) {
		if (x[i] < y[j]) {
			printf("%d %d\n", a, b);
			break;
		}
		else if (x[i] > y[j]) {
			printf("%d %d\n", b, a);
			break;
		}
	}
	return 0;
}